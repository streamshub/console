package com.github.streamshub.systemtests.unit.utils;

import com.github.streamshub.systemtests.utils.SetupUtils;
import org.junit.jupiter.api.Test;

import java.util.Map;

import static org.junit.jupiter.api.Assertions.assertFalse;
import static org.junit.jupiter.api.Assertions.assertThrows;
import static org.junit.jupiter.api.Assertions.assertTrue;

class SetupUtilsTest {
    static class TestKind {
        public String kind;
        public Map<String, Object> metadata;
    }

    static class AnotherKind {
        public String kind;
    }

    @Test
    void testGetYamlContent() {
        String yaml = "kind: TestKind\nmetadata:\n  name: example";
        assertTrue(SetupUtils.isOfKind(yaml, TestKind.class));

        yaml = "kind: AnotherKind\nmetadata:\n  name: example";
        assertFalse(SetupUtils.isOfKind(yaml, TestKind.class));

        yaml = "kind: ::::invalid";
        assertFalse(SetupUtils.isOfKind(yaml, TestKind.class));
    }

    @Test
    void testValidUrl() {
        assertTrue(SetupUtils.isValidUrl("https://www.example.com"));
        assertTrue(SetupUtils.isValidUrl("http://localhost:8080"));
        assertTrue(SetupUtils.isValidUrl("ftp://ftp.example.com"));
        assertFalse(SetupUtils.isValidUrl("invalid_url"));
        assertFalse(SetupUtils.isValidUrl("htp:/example"));
        assertFalse(SetupUtils.isValidUrl(null));
        assertFalse(SetupUtils.isValidUrl(""));
    }

    @Test
    void testGetYamlFileContent() {
        String invalidUrl = "http://very-invalid-123.cy/test.yaml";
        String validUrl = "https://github.com/streamshub/console/releases/download/0.6.3/streamshub-console-operator.yaml";

        Exception exception = assertThrows(RuntimeException.class, () -> SetupUtils.getYamlContent(invalidUrl));
        assertTrue(exception.getMessage().contains("Cannot download YAML content"));

        assertTrue(SetupUtils.getYamlContent(validUrl).startsWith("# Generated by Fabric8 CRDGenerator, manual edits might get overwritten!"));
    }
}

