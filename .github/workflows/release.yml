name: Release

on:
  pull_request:
    types: [closed]
    paths:
      - '.github/project.yml'

jobs:
  release:
    runs-on: ubuntu-latest
    name: release
    if: ${{github.event.pull_request.merged == true}}
    env:
      GITHUB_TOKEN: ${{secrets.RELEASE_TOKEN}}
      PLATFORMS: linux/amd64,linux/arm64,linux/ppc64le,linux/s390x

    steps:
      # ==================== Setup ====================
      - name: Checkout
        uses: actions/checkout@v5
        with:
          token: ${{secrets.RELEASE_TOKEN}}

      - name: Set prerelease version
        run: echo "PRERELEASE_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Retrieve Project Metadata
        uses: radcortez/project-metadata-action@874c89bea2ee8282008328c3418eec4d219013f3
        id: metadata
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          metadata-file-path: '.github/project.yml'
      
      - name: Determine Additional Tags
        run: |
          RELEASE_VERSION="${{steps.metadata.outputs.current-version}}"

          echo "MAJOR_MINOR_TAG=$(echo "${RELEASE_VERSION}" | grep -oE '^[0-9]+\.[0-9]+')" >> $GITHUB_ENV

          LATEST_TAG=""
          git fetch --tags --prune
          if [ "$((printf "${RELEASE_VERSION}\n" && git tag) | sort -V | tail -1)" == "${RELEASE_VERSION}" ] ; then
              LATEST_TAG="latest"
          fi
          echo "LATEST_TAG=${LATEST_TAG}" >> $GITHUB_ENV

      - name: Fetch Operator Framework Utilities
        run: ./operator/bin/fetch-operator-utilities.sh

      - name: Setup JDK
        uses: actions/setup-java@v5
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Quay
        uses: docker/login-action@v3
        with:
          registry: "${{ secrets.IMAGE_REPO_HOSTNAME }}"
          username: "${{ secrets.IMAGE_REPO_USERNAME }}"
          password: "${{ secrets.IMAGE_REPO_PASSWORD }}"

      # ==================== API & Operator ====================
      - name: Build and Push API and Operator Image
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git checkout -b release

          export QUARKUS_CONTAINER_IMAGE_REGISTRY="${{ secrets.IMAGE_REPO_HOSTNAME }}"
          export QUARKUS_CONTAINER_IMAGE_GROUP="${{ secrets.IMAGE_REPO_NAMESPACE }}"
          export QUARKUS_CONTAINER_IMAGE_USERNAME="${{ secrets.IMAGE_REPO_USERNAME }}"
          export QUARKUS_CONTAINER_IMAGE_PASSWORD="${{ secrets.IMAGE_REPO_PASSWORD }}"
          export QUARKUS_CONTAINER_IMAGE_PUSH="true"
          ADDITIONAL_TAGS="${{ env.MAJOR_MINOR_TAG }}"
          if [ "${{ env.LATEST_TAG }}" != "" ]; then
            ADDITIONAL_TAGS="$ADDITIONAL_TAGS,${{ env.LATEST_TAG }}"
          fi
          export QUARKUS_CONTAINER_IMAGE_ADDITIONAL_TAGS="$ADDITIONAL_TAGS"
          export QUARKUS_KUBERNETES_NAMESPACE='$${NAMESPACE}'

          mvn -B release:prepare \
            -DreleaseVersion=${{ steps.metadata.outputs.current-version }} \
            -DdevelopmentVersion=${{ steps.metadata.outputs.next-version }} \
            -Drelease.arguments='-DprereleaseVersion=${{ env.PRERELEASE_VERSION }} -DreleaseVersion=${{ steps.metadata.outputs.current-version }} -DdevelopmentVersion=${{ steps.metadata.outputs.next-version }} -Dcontainer-image.registry=${{ secrets.IMAGE_REPO_HOSTNAME }}'

          git checkout ${{github.base_ref}}
          git rebase release

          export GIT_REVISION=$(git rev-parse --short release)

          # Build and push the release images using the commit tagged in `release:prepare`
          mvn -B release:perform --no-transfer-progress \
            '-Drelease.arguments=-Dquarkus.docker.buildx.platform=${{ env.PLATFORMS }}'

      # ==================== UI ====================
      - name: Build UI
        working-directory: target/checkout/ui
        run: |
          npm ci --omit=dev
          npm run build

      - name: Build and Push UI Image
        uses: docker/build-push-action@v6
        with:
          context: target/checkout/ui/
          platforms: ${{ env.PLATFORMS }}
          provenance: false
          push: true
          tags: |
            ${{ secrets.IMAGE_REPO_HOSTNAME }}/${{ secrets.IMAGE_REPO_NAMESPACE }}/console-ui:${{steps.metadata.outputs.current-version}}
            ${{ secrets.IMAGE_REPO_HOSTNAME }}/${{ secrets.IMAGE_REPO_NAMESPACE }}/console-ui:${{env.MAJOR_MINOR_TAG}}
            ${{ env.LATEST_TAG != '' && format('{0}/{1}/console-ui:{2}', secrets.IMAGE_REPO_HOSTNAME, secrets.IMAGE_REPO_NAMESPACE, env.LATEST_TAG) || '' }}

      # ==================== Operator-Bundle ====================
      - name: Modify Bundle CSV Metadata
        working-directory: target/checkout
        run: ./operator/bin/modify-bundle-metadata.sh "VERSION=${{steps.metadata.outputs.current-version}}" "PLATFORMS=${{ env.PLATFORMS }}"

      - name: Build and Push Operator Bundle Image
        uses: docker/build-push-action@v6
        with:
          context: target/checkout/operator/target/bundle/streamshub-console-operator/
          platforms: ${{ env.PLATFORMS }}
          provenance: false
          push: true
          file: target/checkout/operator/target/bundle/streamshub-console-operator/bundle.Dockerfile
          tags: |
            ${{ secrets.IMAGE_REPO_HOSTNAME }}/${{ secrets.IMAGE_REPO_NAMESPACE }}/console-operator-bundle:${{steps.metadata.outputs.current-version}}
            ${{ secrets.IMAGE_REPO_HOSTNAME }}/${{ secrets.IMAGE_REPO_NAMESPACE }}/console-operator-bundle:${{env.MAJOR_MINOR_TAG}}
            ${{ env.LATEST_TAG != '' && format('{0}/{1}/console-operator-bundle:{2}', secrets.IMAGE_REPO_HOSTNAME, secrets.IMAGE_REPO_NAMESPACE, env.LATEST_TAG) || '' }}

      # ==================== Operator-Catalog ====================
      - name: Generate Operator Catalog Config
        working-directory: target/checkout
        run: |
          operator/bin/generate-catalog.sh \
            ${{ secrets.IMAGE_REPO_HOSTNAME }}/${{ secrets.IMAGE_REPO_NAMESPACE }}/console-operator-bundle

      - name: Archive Failed Catalog
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: failed-operator-catalog
          path: |
            target/checkout/operator/target/catalog/

      - name: Build and Push Operator Catalog Image
        uses: docker/build-push-action@v6
        with:
          context: target/checkout/operator/
          platforms: ${{ env.PLATFORMS }}
          network: none
          provenance: false
          push: true
          file: target/checkout/operator/src/main/docker/catalog.Dockerfile
          tags: |
            ${{ secrets.IMAGE_REPO_HOSTNAME }}/${{ secrets.IMAGE_REPO_NAMESPACE }}/console-operator-catalog:${{steps.metadata.outputs.current-version}}
            ${{ secrets.IMAGE_REPO_HOSTNAME }}/${{ secrets.IMAGE_REPO_NAMESPACE }}/console-operator-catalog:${{env.MAJOR_MINOR_TAG}}
            ${{ env.LATEST_TAG != '' && format('{0}/{1}/console-operator-catalog:{2}', secrets.IMAGE_REPO_HOSTNAME, secrets.IMAGE_REPO_NAMESPACE, env.LATEST_TAG) || '' }}
            
      # ==================== GitHub Release ====================
      - name: Prepare Operator Resources
        run: |
          RELEASE_K8S_PATH='target/checkout/operator/target/kubernetes'

          cat ${RELEASE_K8S_PATH}/consoles.console.streamshub.github.com-v1.yml \
              ${RELEASE_K8S_PATH}/kubernetes.yml \
            > target/streamshub-console-operator.yaml

      - name: Push Release Tag
        run: |
          git push
          git push --tags

      - name: Create GitHub Release
        uses: radcortez/milestone-release-action@2acb408c26989c8a6db893eb3a3dea9cd1f4d875
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          milestone-title: ${{steps.metadata.outputs.current-version}}
          milestone-next: ${{steps.metadata.outputs.next-version}}

      - uses: meeDamian/github-release@2.0
        name: Attach Operator Resources to Release
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ steps.metadata.outputs.current-version }}
          allow_override: true
          gzip: false
          files: target/streamshub-console-operator.yaml
